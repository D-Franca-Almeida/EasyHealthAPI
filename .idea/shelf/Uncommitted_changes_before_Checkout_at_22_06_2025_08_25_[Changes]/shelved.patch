Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># EasyHealth\r\nProjeto interdisciplinar para Faculdade de Tecnologia de Cotia. \r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/README.md	(date 1750591170145)
@@ -1,2 +1,102 @@
-# EasyHealth
-Projeto interdisciplinar para Faculdade de Tecnologia de Cotia. 
+EasyHealth API
+Projeto Interdisciplinar - Faculdade de Tecnologia de Cotia
+A EasyHealth API √© o back-end para uma plataforma de sa√∫de e bem-estar, projetada para conectar Pacientes e Profissionais. O sistema permite o gerenciamento de h√°bitos saud√°veis atrav√©s de tarefas personalizadas, agendamento de consultas e um ambiente seguro de autentica√ß√£o.
+
+‚ú® Principais Funcionalidades
+Autentica√ß√£o Segura com JWT: Sistema de cadastro e login baseado em JSON Web Tokens (JWT) e integrado com Spring Security. As senhas s√£o armazenadas de forma segura usando criptografia (BCrypt).
+Perfis de Usu√°rio com Heran√ßa: Utiliza uma estrutura de heran√ßa com uma entidade Person base, da qual Paciente e Profissional herdam atributos comuns, promovendo a reutiliza√ß√£o de c√≥digo.
+Cat√°logo de H√°bitos Din√¢mico: O sistema possui um cat√°logo de Objetivos e Modelos de H√°bito que √© carregado na inicializa√ß√£o, permitindo que a lista de atividades saud√°veis seja facilmente expandida no futuro.
+Gera√ß√£o de Tarefas Personalizadas: Usu√°rios podem selecionar um objetivo de sa√∫de (ex: "Perder Peso"), e a API automaticamente cria uma lista de tarefas (h√°bitos) correspondentes para eles.
+CRUD Completo de Tarefas: Ciclo completo de cria√ß√£o (assign), leitura, atualiza√ß√£o de status (PENDING, DONE) e dele√ß√£o l√≥gica (DELETED) das tarefas de um usu√°rio.
+Agendamento de Consultas: Funcionalidade para que pacientes agendem consultas com profissionais.
+C√≥digo Limpo com Lombok: Utiliza√ß√£o extensiva do Lombok para reduzir c√≥digo boilerplate e manter as classes de modelo e DTOs limpas e leg√≠veis.
+üöÄ Arquitetura e Tecnologias
+Linguagem: Java 21
+Framework Principal: Spring Boot 3.4.3
+Seguran√ßa: Spring Security 6+
+Tokens: JSON Web Token (JWT) com a biblioteca JJWT
+Persist√™ncia: Spring Data JPA / Hibernate
+Banco de Dados: PostgreSQL (configurado para desenvolvimento)
+Build e Depend√™ncias: Maven
+Redu√ß√£o de Boilerplate: Lombok
+üìÇ Estrutura do Projeto
+config: Classes de configura√ß√£o, como o DataInitializer que popula o banco.
+controller: Camada REST que exp√µe os endpoints da API.
+dto: (Data Transfer Objects) Classes para transfer√™ncia de dados entre cliente e servidor.
+enums: Enumera√ß√µes utilizadas no projeto (Status, G√™nero, etc.).
+model: Entidades JPA que representam o modelo de dados.
+repository: Interfaces Spring Data JPA para acesso ao banco de dados.
+service: Camada de servi√ßo contendo a l√≥gica de neg√≥cio.
+security: Pacote dedicado √† configura√ß√£o do Spring Security, filtro JWT e l√≥gica de autentica√ß√£o.
+‚öôÔ∏è Configura√ß√£o do Ambiente
+Clone o Reposit√≥rio:
+
+Bash
+
+git clone [URL_DO_SEU_REPOSITORIO]
+cd easyhealthapi
+Pr√©-requisitos:
+
+Java JDK 21 ou superior.
+Maven 3.6+ (ou use o Maven Wrapper inclu√≠do).
+Configure o application.properties:
+
+Abra o arquivo src/main/resources/application.properties.
+Garanta que as configura√ß√µes do banco de dados e do JWT estejam corretas.
+<!-- end list -->
+
+Properties
+
+# Configura√ß√£o do Servidor
+server.port=8181
+
+# Configura√ß√£o do Banco de Dados PostgreSQL
+spring.datasource.url=jdbc:postgresql://localhost:5432/easyhealthdb
+spring.datasource.username=postgres
+spring.datasource.password=sua_senha_do_banco
+
+# Configura√ß√£o do Hibernate
+spring.jpa.hibernate.ddl-auto=update
+spring.jpa.show-sql=true
+spring.jpa.properties.hibernate.format_sql=true
+
+# Configura√ß√£o do JWT (obrigat√≥ria para a aplica√ß√£o iniciar)
+jwt.secret=a4b8c1d9e2f3g4h5i6j7k8l9m0n1o2p3q4r5s6t7u8v9w0x1y2z3a4b5c6d7
+jwt.expiration=86400000 # 24 horas em milissegundos
+‚ñ∂Ô∏è Executando a Aplica√ß√£o
+Abra um terminal na raiz do projeto.
+Execute o comando usando o Maven Wrapper (recomendado):
+Bash
+
+./mvnw spring-boot:run
+Ou, no Windows:
+Bash
+
+mvnw spring-boot:run
+A API estar√° dispon√≠vel em http://localhost:8181.
+
+üìñ Documenta√ß√£o da API
+O fluxo de uso da API √©:
+
+Cadastre um usu√°rio via /auth/signup-*.
+Fa√ßa login via /auth/signin para obter um token JWT.
+Use esse token JWT no cabe√ßalho Authorization de todas as requisi√ß√µes para endpoints protegidos.
+Endpoints P√∫blicos (Autentica√ß√£o)
+M√©todo	Endpoint	Descri√ß√£o	Corpo da Requisi√ß√£o (Exemplo)
+POST	/auth/signup-paciente	Cadastra um novo paciente. A senha enviada ser√° criptografada.	{"nome": "...", "email": "...", "senha": "plain_text", ...}
+POST	/auth/signup-profissional	Cadastra um novo profissional. A senha enviada ser√° criptografada.	{"nome": "...", "email": "...", "senha": "plain_text", ...}
+POST	/auth/signin	Realiza o login e retorna um token JWT v√°lido por 24 horas.	{"email": "...", "senha": "..."}
+
+Exportar para as Planilhas
+Endpoints Protegidos (Exigem Autentica√ß√£o)
+Para acessar os endpoints abaixo, inclua o token JWT no cabe√ßalho de cada requisi√ß√£o:
+Header: Authorization
+Valor: Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQi...
+
+M√©todo	Endpoint	Descri√ß√£o	Corpo da Requisi√ß√£o (Exemplo)
+GET	/objectives	Lista todos os objetivos de sa√∫de dispon√≠veis no cat√°logo.	(nenhum)
+POST	/tasks/person/{id}/assign-objective?objectiveId={id}	Cria as tarefas de um objetivo para uma pessoa espec√≠fica.	(nenhum)
+GET	/tasks/person/{id}	Lista todas as tarefas de uma pessoa espec√≠fica.	(nenhum)
+PUT	/tasks/{id}/status	Atualiza o status de uma tarefa espec√≠fica.	{"status": "DONE"}
+DELETE	/tasks/{id}	Realiza a dele√ß√£o l√≥gica de uma tarefa.	(nenhum)
+POST	/consultas/agendar	Agenda uma nova consulta.	{"pacienteId": 1, "profissionalId": 2, ...}
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/repository/ConsultaRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fatec.easyhealthapi.repository;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.data.repository.CrudRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport com.fatec.easyhealthapi.model.Consulta;\r\n\r\n\r\n@Repository\r\npublic interface ConsultaRepository extends CrudRepository<Consulta, Integer> {\r\n   Optional<List<Consulta>> findByPacienteId(Integer Id);\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/repository/ConsultaRepository.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/repository/ConsultaRepository.java
--- a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/repository/ConsultaRepository.java	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/repository/ConsultaRepository.java	(date 1750591170161)
@@ -1,16 +1,7 @@
 package com.fatec.easyhealthapi.repository;
 
-import java.util.List;
-import java.util.Optional;
-
-import org.springframework.data.repository.CrudRepository;
-import org.springframework.stereotype.Repository;
-
+import org.springframework.data.jpa.repository.JpaRepository;
 import com.fatec.easyhealthapi.model.Consulta;
 
-
-@Repository
-public interface ConsultaRepository extends CrudRepository<Consulta, Integer> {
-   Optional<List<Consulta>> findByPacienteId(Integer Id);
+public interface ConsultaRepository extends JpaRepository<Consulta, Long> {
 }
-
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/enums/StatusConsulta.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/enums/StatusConsulta.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/enums/StatusConsulta.java
new file mode 100644
--- /dev/null	(date 1750591170161)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/enums/StatusConsulta.java	(date 1750591170161)
@@ -0,0 +1,7 @@
+package com.fatec.easyhealthapi.enums;
+
+public enum StatusConsulta {
+    AGENDADA,
+    CANCELADA,
+    REALIZADA
+}
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/service/ConsultaService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fatec.easyhealthapi.service;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.fatec.easyhealthapi.model.Consulta;\r\nimport com.fatec.easyhealthapi.repository.ConsultaRepository;\r\n\r\n@Service\r\npublic class ConsultaService {\r\n    @Autowired\r\n    private ConsultaRepository consultaRepository;\r\n\r\n    public Consulta agendarConsulta(Consulta consulta) {\r\n        consulta.setStatus(\"AGENDADA\");\r\n        return consultaRepository.save(consulta);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/service/ConsultaService.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/service/ConsultaService.java
--- a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/service/ConsultaService.java	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/service/ConsultaService.java	(date 1750591170161)
@@ -5,14 +5,37 @@
 
 import com.fatec.easyhealthapi.model.Consulta;
 import com.fatec.easyhealthapi.repository.ConsultaRepository;
+import com.fatec.easyhealthapi.repository.PacienteRepository;
+import com.fatec.easyhealthapi.repository.ProfissionalRepository;
+
+import java.time.LocalDateTime;
 
 @Service
 public class ConsultaService {
+
     @Autowired
     private ConsultaRepository consultaRepository;
 
-    public Consulta agendarConsulta(Consulta consulta) {
-        consulta.setStatus("AGENDADA");
+    @Autowired
+    private PacienteRepository pacienteRepository;
+
+    @Autowired
+    private ProfissionalRepository profissionalRepository;
+
+    public Consulta agendar(Integer pacienteId, Integer profissionalId, LocalDateTime dataHora, String motivo) {
+
+        var paciente = pacienteRepository.findById(pacienteId)
+                .orElseThrow(() -> new RuntimeException("Paciente n√£o encontrado"));
+
+        var profissional = profissionalRepository.findById(profissionalId)
+                .orElseThrow(() -> new RuntimeException("Profissional n√£o encontrado"));
+
+        var consulta = new Consulta();
+        consulta.setDataHora(dataHora);
+        consulta.setMotivo(motivo);
+        consulta.setPaciente(paciente);
+        consulta.setProfissional(profissional);
+
         return consultaRepository.save(consulta);
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4ec198ed-ed2a-40e9-8c0c-c1d83ca5bbf2\" name=\"Changes\" comment=\"Adicionando o swagger\">\r\n      <change beforePath=\"$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/security/SecurityConfig.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/security/SecurityConfig.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;D-Franca-Almeida&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/D-Franca-Almeida/EasyHealthAPI.git&quot;,\r\n    &quot;accountId&quot;: &quot;22ed02c3-e036-4656-b564-2db695239ae0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"printErrorStackTraces\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2x6T4Ocsszq1kEELHqEpqwhEiH7\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.EasyhealthapiApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;#3 on develop&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"EasyhealthapiApplication\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.fatec.easyhealthapi.EasyhealthapiApplication\" />\r\n      <module name=\"easyhealthapi\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.fatec.easyhealthapi.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4ec198ed-ed2a-40e9-8c0c-c1d83ca5bbf2\" name=\"Changes\" comment=\"\" />\r\n      <created>1747257335245</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1747257335245</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Adicionando o swagger\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1750590232849</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1750590232849</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Adicionando o swagger\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1750590265171</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1750590265171</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Adicionando o swagger\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1750590271266</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1750590271266</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Adicionando o swagger\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1750590309984</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1750590309984</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Adicionando o swagger\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1750590343594</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1750590343594</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Adicionando o swagger\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adicionando o swagger\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/.idea/workspace.xml	(date 1750591177409)
@@ -5,7 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="4ec198ed-ed2a-40e9-8c0c-c1d83ca5bbf2" name="Changes" comment="Adicionando o swagger">
-      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/security/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/security/SecurityConfig.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/enums/StatusConsulta.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/AuthController.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/AuthController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/ConsultaController.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/ConsultaController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Consulta.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Consulta.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Paciente.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Paciente.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Profissional.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Profissional.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/repository/ConsultaRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/repository/ConsultaRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/service/ConsultaService.java" beforeDir="false" afterPath="$PROJECT_DIR$/easyhealthapi/src/main/java/com/fatec/easyhealthapi/service/ConsultaService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -55,17 +63,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.EasyhealthapiApplication.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;#3 on develop&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.EasyhealthapiApplication.executor": "Run",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "#3 on Merging develop",
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "settings.editor.selected.configurable": "MavenSettings"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration name="EasyhealthapiApplication" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.fatec.easyhealthapi.EasyhealthapiApplication" />
@@ -130,8 +138,43 @@
       <option name="project" value="LOCAL" />
       <updated>1750590343594</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary="Adicionando o swagger">
+      <option name="closed" value="true" />
+      <created>1750590382881</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1750590382881</updated>
+    </task>
+    <task id="LOCAL-00007" summary="Adicionando o swagger">
+      <option name="closed" value="true" />
+      <created>1750590405301</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1750590405301</updated>
+    </task>
+    <task id="LOCAL-00008" summary="Adicionando o swagger">
+      <option name="closed" value="true" />
+      <created>1750590913763</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1750590913763</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Adicionando o swagger" />
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Consulta.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fatec.easyhealthapi.model;\r\n\r\nimport java.time.LocalDateTime;\r\n\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.ManyToOne;\r\nimport jakarta.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"consultas\")\r\npublic class Consulta {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Integer id;\r\n    @ManyToOne\r\n    private Paciente paciente;\r\n    @ManyToOne\r\n    private Profissional profissional;\r\n    private LocalDateTime dataHora;\r\n    private String status;\r\n    \r\n    // Construtores\r\n    \r\n    public Consulta() {\r\n    \t\r\n    }\r\n\r\n\tpublic Consulta(Integer id, Paciente paciente, Profissional profissional, LocalDateTime dataHora, String status) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.paciente = paciente;\r\n\t\tthis.profissional = profissional;\r\n\t\tthis.dataHora = dataHora;\r\n\t\tthis.status = status;\r\n\t}\r\n\t\r\n\t\r\n\t// Getters and Setters\r\n\t\r\n\tpublic Integer getId() {\r\n\t\treturn id;\r\n\t}\r\n\r\n\tpublic void setId(Integer id) {\r\n\t\tthis.id = id;\r\n\t}\r\n\r\n\tpublic Paciente getPaciente() {\r\n\t\treturn paciente;\r\n\t}\r\n\r\n\tpublic void setPaciente(Paciente paciente) {\r\n\t\tthis.paciente = paciente;\r\n\t}\r\n\r\n\tpublic Profissional getProfissional() {\r\n\t\treturn profissional;\r\n\t}\r\n\r\n\tpublic void setProfissional(Profissional profissional) {\r\n\t\tthis.profissional = profissional;\r\n\t}\r\n\r\n\tpublic LocalDateTime getDataHora() {\r\n\t\treturn dataHora;\r\n\t}\r\n\r\n\tpublic void setDataHora(LocalDateTime dataHora) {\r\n\t\tthis.dataHora = dataHora;\r\n\t}\r\n\r\n\tpublic String getStatus() {\r\n\t\treturn status;\r\n\t}\r\n\r\n\tpublic void setStatus(String status) {\r\n\t\tthis.status = status;\r\n\t}\r\n    \r\n\r\n\t\r\n    \r\n    \r\n    \r\n    \r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Consulta.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Consulta.java
--- a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Consulta.java	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Consulta.java	(date 1750591170161)
@@ -1,53 +1,58 @@
 package com.fatec.easyhealthapi.model;
 
+import com.fatec.easyhealthapi.enums.StatusConsulta;
+import jakarta.persistence.*;
 import java.time.LocalDateTime;
 
-import jakarta.persistence.Entity;
-import jakarta.persistence.GeneratedValue;
-import jakarta.persistence.GenerationType;
-import jakarta.persistence.Id;
-import jakarta.persistence.ManyToOne;
-import jakarta.persistence.Table;
-
 @Entity
 @Table(name = "consultas")
 public class Consulta {
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Integer id;
-    @ManyToOne
-    private Paciente paciente;
-    @ManyToOne
-    private Profissional profissional;
-    private LocalDateTime dataHora;
-    private String status;
-    
-    // Construtores
-    
-    public Consulta() {
-    	
-    }
+
+	@Id
+	@GeneratedValue(strategy = GenerationType.IDENTITY)
+	private Long id;
+
+	private LocalDateTime dataHora;
+
+	private String motivo;
+
+	@ManyToOne
+	@JoinColumn(name = "paciente_id")
+	private Paciente paciente;
+
+	@ManyToOne
+	@JoinColumn(name = "profissional_id")
+	private Profissional profissional;
+
+	@Enumerated(EnumType.STRING)
+	private StatusConsulta status = StatusConsulta.AGENDADA;
+
+	// Getters e Setters
+
+	public LocalDateTime getDataHora() {
+		return dataHora;
+	}
 
-	public Consulta(Integer id, Paciente paciente, Profissional profissional, LocalDateTime dataHora, String status) {
-		super();
-		this.id = id;
-		this.paciente = paciente;
-		this.profissional = profissional;
+	public void setDataHora(LocalDateTime dataHora) {
 		this.dataHora = dataHora;
-		this.status = status;
 	}
-	
-	
-	// Getters and Setters
-	
-	public Integer getId() {
+
+	public Long getId() {
 		return id;
 	}
 
-	public void setId(Integer id) {
+	public void setId(Long id) {
 		this.id = id;
 	}
 
+	public String getMotivo() {
+		return motivo;
+	}
+
+	public void setMotivo(String motivo) {
+		this.motivo = motivo;
+	}
+
 	public Paciente getPaciente() {
 		return paciente;
 	}
@@ -64,27 +69,11 @@
 		this.profissional = profissional;
 	}
 
-	public LocalDateTime getDataHora() {
-		return dataHora;
-	}
-
-	public void setDataHora(LocalDateTime dataHora) {
-		this.dataHora = dataHora;
-	}
-
-	public String getStatus() {
+	public StatusConsulta getStatus() {
 		return status;
 	}
 
-	public void setStatus(String status) {
+	public void setStatus(StatusConsulta status) {
 		this.status = status;
 	}
-    
-
-	
-    
-    
-    
-    
 }
-
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/ConsultaController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fatec.easyhealthapi.controller;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.fatec.easyhealthapi.model.Consulta;\r\nimport com.fatec.easyhealthapi.service.ConsultaService;\r\n\r\n@RestController\r\n@RequestMapping(\"/consultas\")\r\npublic class ConsultaController {\r\n    @Autowired\r\n    private ConsultaService consultaService;\r\n\r\n    @PostMapping(\"/agendar\")\r\n    public ResponseEntity<Consulta> agendar(@RequestBody Consulta consulta) {\r\n        return ResponseEntity.ok(consultaService.agendarConsulta(consulta));\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/ConsultaController.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/ConsultaController.java
--- a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/ConsultaController.java	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/ConsultaController.java	(date 1750591170161)
@@ -1,24 +1,34 @@
 package com.fatec.easyhealthapi.controller;
 
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.PostMapping;
-import org.springframework.web.bind.annotation.RequestBody;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RestController;
-
 import com.fatec.easyhealthapi.model.Consulta;
 import com.fatec.easyhealthapi.service.ConsultaService;
 
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.*;
+
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
+import java.util.Map;
+
 @RestController
 @RequestMapping("/consultas")
 public class ConsultaController {
+
     @Autowired
     private ConsultaService consultaService;
 
     @PostMapping("/agendar")
-    public ResponseEntity<Consulta> agendar(@RequestBody Consulta consulta) {
-        return ResponseEntity.ok(consultaService.agendarConsulta(consulta));
+    public ResponseEntity<Consulta> agendar(@RequestBody Map<String, String> dados) {
+        Integer pacienteId = Integer.parseInt(dados.get("pacienteId"));
+        Integer profissionalId = Integer.parseInt(dados.get("profissionalId"));
+        String dataHoraStr = dados.get("dataHora");
+        String motivo = dados.get("motivo");
+
+        LocalDateTime dataHora = LocalDateTime.parse(dataHoraStr, DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm"));
+
+        Consulta consulta = consultaService.agendar(pacienteId, profissionalId, dataHora, motivo);
+
+        return ResponseEntity.ok(consulta);
     }
 }
-
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Profissional.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fatec.easyhealthapi.model;\r\n\r\nimport jakarta.persistence.*;\r\n\r\n@Entity\r\n@Table(name = \"profissionais\")\r\n@PrimaryKeyJoinColumn(name = \"person_id\")\r\npublic class Profissional extends Person {\r\n\tprivate String especialidade;\r\n\tprivate String identificacao;\r\n\r\n\t// Getters e Setters manuais\r\n\tpublic String getEspecialidade() { return especialidade; }\r\n\tpublic void setEspecialidade(String especialidade) { this.especialidade = especialidade; }\r\n\tpublic String getIdentificacao() { return identificacao; }\r\n\tpublic void setIdentificacao(String identificacao) { this.identificacao = identificacao; }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Profissional.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Profissional.java
--- a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Profissional.java	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Profissional.java	(date 1750591170161)
@@ -9,9 +9,35 @@
 	private String especialidade;
 	private String identificacao;
 
+<<<<<<< HEAD
 	// Getters e Setters manuais
 	public String getEspecialidade() { return especialidade; }
 	public void setEspecialidade(String especialidade) { this.especialidade = especialidade; }
 	public String getIdentificacao() { return identificacao; }
 	public void setIdentificacao(String identificacao) { this.identificacao = identificacao; }
-}
\ No newline at end of file
+}
+=======
+	public Profissional() {}
+
+	public Profissional(String especialidade, String identificacao) {
+		this.especialidade = especialidade;
+		this.identificacao = identificacao;
+	}
+
+	public String getEspecialidade() {
+		return especialidade;
+	}
+
+	public void setEspecialidade(String especialidade) {
+		this.especialidade = especialidade;
+	}
+
+	public String getIdentificacao() {
+		return identificacao;
+	}
+
+	public void setIdentificacao(String identificacao) {
+		this.identificacao = identificacao;
+	}
+}
+>>>>>>> main
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Paciente.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fatec.easyhealthapi.model;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"pacientes\")\r\npublic class Paciente extends Person {\r\n    @Column(name = \"ocupacao\")\r\n    private String ocupacao;\r\n    @Column(name = \"estado_civil\")\r\n    private String estadoCivil;\r\n    @Column(name = \"nacionalidade\")\r\n    private String nacionalidade;\r\n    @Column(name = \"nome_social\")\r\n    private String nomeSocial;\r\n    @Column(name = \"peso\")\r\n    private Double peso;\r\n    @Column(name = \"altura\")\r\n    private Double altura;\r\n\r\n    // Getters e Setters manuais\r\n    public String getOcupacao() { return ocupacao; }\r\n    public void setOcupacao(String ocupacao) { this.ocupacao = ocupacao; }\r\n    public String getEstadoCivil() { return estadoCivil; }\r\n    public void setEstadoCivil(String estadoCivil) { this.estadoCivil = estadoCivil; }\r\n    public String getNacionalidade() { return nacionalidade; }\r\n    public void setNacionalidade(String nacionalidade) { this.nacionalidade = nacionalidade; }\r\n    public String getNomeSocial() { return nomeSocial; }\r\n    public void setNomeSocial(String nomeSocial) { this.nomeSocial = nomeSocial; }\r\n    public Double getPeso() { return peso; }\r\n    public void setPeso(Double peso) { this.peso = peso; }\r\n    public Double getAltura() { return altura; }\r\n    public void setAltura(Double altura) { this.altura = altura; }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Paciente.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Paciente.java
--- a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Paciente.java	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/model/Paciente.java	(date 1750591170161)
@@ -20,6 +20,7 @@
     @Column(name = "altura")
     private Double altura;
 
+<<<<<<< HEAD
     // Getters e Setters manuais
     public String getOcupacao() { return ocupacao; }
     public void setOcupacao(String ocupacao) { this.ocupacao = ocupacao; }
@@ -33,4 +34,80 @@
     public void setPeso(Double peso) { this.peso = peso; }
     public Double getAltura() { return altura; }
     public void setAltura(Double altura) { this.altura = altura; }
-}
\ No newline at end of file
+}
+=======
+    @Column(name = "ocupacao")
+    private String ocupacao;
+
+    @Column(name = "estado_civil")
+    private String estadoCivil;
+
+    @Column(name = "nacionalidade")
+    private String nacionalidade;
+
+    @Column(name = "nome_social")
+    private String nomeSocial;
+
+    @Column(name = "peso")
+    private Double peso;
+
+    @Column(name = "altura")
+    private Double altura;
+
+    public Paciente() {}
+
+    public Paciente(Integer id) {
+        super();
+    }
+
+    // Getters e Setters
+
+    public String getOcupacao() {
+        return ocupacao;
+    }
+
+    public void setOcupacao(String ocupacao) {
+        this.ocupacao = ocupacao;
+    }
+
+    public String getEstadoCivil() {
+        return estadoCivil;
+    }
+
+    public void setEstadoCivil(String estadoCivil) {
+        this.estadoCivil = estadoCivil;
+    }
+
+    public String getNacionalidade() {
+        return nacionalidade;
+    }
+
+    public void setNacionalidade(String nacionalidade) {
+        this.nacionalidade = nacionalidade;
+    }
+
+    public String getNomeSocial() {
+        return nomeSocial;
+    }
+
+    public void setNomeSocial(String nomeSocial) {
+        this.nomeSocial = nomeSocial;
+    }
+
+    public Double getPeso() {
+        return peso;
+    }
+
+    public void setPeso(Double peso) {
+        this.peso = peso;
+    }
+
+    public Double getAltura() {
+        return altura;
+    }
+
+    public void setAltura(Double altura) {
+        this.altura = altura;
+    }
+}
+>>>>>>> main
Index: easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/AuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.fatec.easyhealthapi.controller;\r\n\r\nimport com.fatec.easyhealthapi.service.AuthService;\r\n// Remova o import do Lombok se ele n√£o for mais usado em outras anota√ß√µes\r\n// import lombok.RequiredArgsConstructor;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport java.util.Map;\r\n\r\n@RestController\r\n@RequestMapping(\"/auth\")\r\n// @RequiredArgsConstructor // 1. REMOVA ESTA ANOTA√á√ÉO\r\npublic class AuthController {\r\n\r\n    private final AuthService authService;\r\n\r\n    // 2. ADICIONE O CONSTRUTOR MANUALMENTE\r\n    // Este construtor faz exatamente o que o @RequiredArgsConstructor deveria fazer.\r\n    // O Spring usar√° este construtor para injetar a depend√™ncia do AuthService.\r\n    public AuthController(AuthService authService) {\r\n        this.authService = authService;\r\n    }\r\n\r\n    @PostMapping(\"/signup-paciente\")\r\n    public ResponseEntity<?> signupPaciente(@RequestBody Map<String, String> body) {\r\n        try {\r\n            authService.signupPaciente(body);\r\n            return ResponseEntity.ok(\"Paciente cadastrado com sucesso.\");\r\n        } catch (Exception e) {\r\n            return ResponseEntity.badRequest().body(\"Erro ao cadastrar paciente: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    @PostMapping(\"/signup-profissional\")\r\n    public ResponseEntity<?> signupProfissional(@RequestBody Map<String, String> body) {\r\n        try {\r\n            authService.signupProfissional(body);\r\n            return ResponseEntity.ok(\"Profissional cadastrado com sucesso.\");\r\n        } catch (Exception e) {\r\n            return ResponseEntity.badRequest().body(\"Erro ao cadastrar profissional: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    @PostMapping(\"/signin\")\r\n    public ResponseEntity<?> signin(@RequestBody Map<String, String> credentials) {\r\n        try {\r\n            String jwtToken = authService.signin(\r\n                    credentials.get(\"email\"),\r\n                    credentials.get(\"senha\")\r\n            );\r\n            return ResponseEntity.ok(Map.of(\"token\", jwtToken));\r\n        } catch (Exception e) {\r\n            return ResponseEntity.status(401).body(\"Email ou senha inv√°lidos.\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/AuthController.java b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/AuthController.java
--- a/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/AuthController.java	(revision 01852997a983ef8cedce62584a58a927c206fbda)
+++ b/easyhealthapi/src/main/java/com/fatec/easyhealthapi/controller/AuthController.java	(date 1750591170145)
@@ -25,26 +25,83 @@
         this.authService = authService;
     }
 
+<<<<<<< HEAD
     @PostMapping("/signup-paciente")
     public ResponseEntity<?> signupPaciente(@RequestBody Map<String, String> body) {
         try {
             authService.signupPaciente(body);
+=======
+    @Autowired
+    private ProfissionalRepository profissionalRepository;
+
+    @PostMapping("/signup-paciente")
+    public ResponseEntity<?> signupPaciente(@RequestBody Map<String, String> body) {
+        try {
+            Paciente paciente = new Paciente();
+            paciente.setNome(body.get("nome"));
+            paciente.setEmail(body.get("email"));
+            paciente.setSenha(body.get("senha")); // Ideal: criptografar
+            paciente.setCpf(body.get("cpf"));
+            paciente.setTelefone(body.get("telefone"));
+            paciente.setEndereco(body.get("endereco"));
+            paciente.setDataNascimento(LocalDate.parse(body.get("dataNascimento"), DateTimeFormatter.ofPattern("dd/MM/yyyy")));
+            paciente.setGenero(Genero.valueOf(body.get("genero").toUpperCase()));
+
+            paciente.setAltura(Double.parseDouble(body.get("altura"))); // Altura em metros
+            paciente.setPeso(Double.parseDouble(body.get("peso")));     // Peso em kg
+            paciente.setEstadoCivil(body.get("estadocivil"));
+            paciente.setNacionalidade(body.get("nacionalidade"));
+            paciente.setNomeSocial(body.get("nomesocial"));
+            paciente.setOcupacao(body.get("ocupacao"));
+
+            pacienteRepository.save(paciente);
+
+>>>>>>> main
             return ResponseEntity.ok("Paciente cadastrado com sucesso.");
         } catch (Exception e) {
             return ResponseEntity.badRequest().body("Erro ao cadastrar paciente: " + e.getMessage());
         }
     }
 
+<<<<<<< HEAD
     @PostMapping("/signup-profissional")
     public ResponseEntity<?> signupProfissional(@RequestBody Map<String, String> body) {
         try {
             authService.signupProfissional(body);
+=======
+
+
+    @PostMapping("/signup-profissional")
+    public ResponseEntity<?> signupProfissional(@RequestBody Map<String, String> body) {
+        try {
+            Profissional profissional = new Profissional();
+            profissional.setNome(body.get("nome"));
+            profissional.setEmail(body.get("email"));
+            profissional.setSenha(body.get("senha"));
+            profissional.setCpf(body.get("cpf"));
+            profissional.setTelefone(body.get("telefone"));
+            profissional.setEndereco(body.get("endereco"));
+            profissional.setDataNascimento(LocalDate.parse(body.get("dataNascimento"), DateTimeFormatter.ofPattern("dd/MM/yyyy")));
+            profissional.setGenero(Genero.valueOf(body.get("genero").toUpperCase()));
+
+            // Campos espec√≠ficos
+            profissional.setEspecialidade(body.get("especialidade"));
+            profissional.setIdentificacao(body.get("identificacao"));
+
+            profissionalRepository.save(profissional);
+
+>>>>>>> main
             return ResponseEntity.ok("Profissional cadastrado com sucesso.");
         } catch (Exception e) {
             return ResponseEntity.badRequest().body("Erro ao cadastrar profissional: " + e.getMessage());
         }
     }
 
+<<<<<<< HEAD
+=======
+
+
+>>>>>>> main
     @PostMapping("/signin")
     public ResponseEntity<?> signin(@RequestBody Map<String, String> credentials) {
         try {
@@ -57,4 +114,21 @@
             return ResponseEntity.status(401).body("Email ou senha inv√°lidos.");
         }
     }
-}
\ No newline at end of file
+<<<<<<< HEAD
+}
+=======
+
+    @PostMapping("/check")
+    public ResponseEntity<?> check(@RequestHeader String token) {
+        Boolean isValid = authService.validate(token);
+        return (isValid) ? ResponseEntity.ok().build()
+                : ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();
+    }
+
+    @PostMapping("/signout")
+    public ResponseEntity<?> signout(@RequestHeader String token) {
+        authService.signout(token);
+        return ResponseEntity.ok().build();
+    }
+}
+>>>>>>> main
